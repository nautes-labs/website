(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{279:function(t,v,_){t.exports=_.p+"assets/img/brief-architecture.471aa7ce.png"},433:function(t,v,_){"use strict";_.r(v);var s=_(14),r=Object(s.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),v("p",[t._v("Nautes 是 Kubernetes 原生的开源一站式开发者平台，融合了 DevOps 和 GitOps 的理念和最佳实践，以可插拔的方式集成了业界最优秀的云原生开源项目。")]),t._v(" "),v("h2",{attrs:{id:"特性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[t._v("#")]),t._v(" 特性")]),t._v(" "),v("ul",[v("li",[t._v("覆盖敏捷开发、CI/CD、自动化测试、安全、运维等全流程的一站式开发者平台。")]),t._v(" "),v("li",[t._v("遵循 GitOps 最佳实践，以版本库作为唯一可信数据源。当版本库中的数据有变更时，由 Operator 自动识别变更并向 Kubernetes 集群做增量更新。")]),t._v(" "),v("li",[t._v("全分布式的多租户架构，租户作为分布式的计算单元和存储单元支持水平扩展，租户所管理的资源同样支持水平扩展。")]),t._v(" "),v("li",[t._v("良好的适配性，除了底座 Kubernetes 以及 Git 外，其他组件均可被替换。")]),t._v(" "),v("li",[t._v("所有功能均提供声明式的REST API，支持二次开发。")]),t._v(" "),v("li",[t._v("对所集成的开源项目，均保持其原生特性，无裁剪式封装，对受管应用不产生二次绑定。")]),t._v(" "),v("li",[t._v("通过构建上层数据模型，实现对所集成的开源项目的统一认证、统一授权。")]),t._v(" "),v("li",[t._v("支持私有云、混合云的部署模式。")])]),t._v(" "),v("h2",{attrs:{id:"架构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#架构"}},[t._v("#")]),t._v(" 架构")]),t._v(" "),v("p",[t._v("Nautes 采用全分布式的多租户架构，平台管理集群负责租户的分配和回收，每个租户独占一套资源（包括代码库、密钥库、制品库、认证服务器、集群等），租户内的资源由租户管理集群进行管理。")]),t._v(" "),v("p",[t._v("租户作为资源的管理单元，可由用户根据自身组织特性进行划分，常见的划分方式有：按产品团队、按部门、按子公司等。")]),t._v(" "),v("p",[t._v("租户内的资源也支持多实例部署，例如：可以在一个租户内部署多个 Harbor 实例，用于隔离不同产品的容器镜像数据。")]),t._v(" "),v("p",[v("img",{attrs:{src:_(279),alt:""}})]),t._v(" "),v("h2",{attrs:{id:"实体定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#实体定义"}},[t._v("#")]),t._v(" 实体定义")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("产品")]),t._v("：对应一个软件系统，包含团队、项目、环境、代码库、制品库、及运行时。产品可以被租户管理员授权使用指定的 Kubernetes 集群。")]),t._v(" "),v("li",[v("strong",[t._v("项目")]),t._v("：对应一个微服务，每个项目有自己的代码库。您可以使用集群进行项目的集成和部署，也可以使用产品的制品库对项目的制品进行存储和版本管理。 一个产品下可以包含多个项目。")]),t._v(" "),v("li",[v("strong",[t._v("环境")]),t._v("：使用集群（目前只支持 Kubernetes集群）来承载产品中各个项目的集成和部署的管理单元。一个产品包含多个环境，如：开发环境、测试环境、预生产环境和生产环境等。")]),t._v(" "),v("li",[v("strong",[t._v("代码库")]),t._v("：用于存储项目的源代码、流水线配置、部署清单的版本库。只支持 Git。")]),t._v(" "),v("li",[v("strong",[t._v("流水线运行时")]),t._v("：定义用于集成项目的流水线的配置声明，如：流水线配置的存储位置、流水线的触发方式、运行流水线的目标环境等。")]),t._v(" "),v("li",[v("strong",[t._v("部署运行时")]),t._v("：定义用于部署项目的配置声明，如：部署清单的存储位置、部署到的目标环境等。")])])])}),[],!1,null,null,null);v.default=r.exports}}]);