(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{352:function(a,t,e){"use strict";e.r(t);var s=e(14),n=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"注册运行时集群"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注册运行时集群"}},[a._v("#")]),a._v(" 注册运行时集群")]),a._v(" "),t("p",[a._v("在开始本节之前，请确保您已阅读 "),t("RouterLink",{attrs:{to:"/guide/user-guide/main-process.html"}},[a._v("主体流程")]),a._v(" 章节，了解执行流水线和部署应用的主体流程和相关术语。")],1),a._v(" "),t("p",[a._v("运行时集群用于承载应用的运行时。集群形态支持物理集群和虚拟集群。")]),a._v(" "),t("p",[a._v("支持通过 "),t("RouterLink",{attrs:{to:"/guide/user-guide/run-a-pipeline.html#注册运行时集群"}},[a._v("命令行")]),a._v(" 和 API 两种方式注册运行时集群。")],1),a._v(" "),t("h2",{attrs:{id:"前提条件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前提条件"}},[a._v("#")]),a._v(" 前提条件")]),a._v(" "),t("h3",{attrs:{id:"创建-access-token"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建-access-token"}},[a._v("#")]),a._v(" 创建 access token")]),a._v(" "),t("p",[a._v("您需要创建一个 access token，作为请求 API 的请求头。详情参考 "),t("RouterLink",{attrs:{to:"/guide/user-guide/run-a-pipeline.html#注册-gitlab-账号"}},[a._v("注册 GitLab 账号")]),a._v("。")],1),a._v(" "),t("h3",{attrs:{id:"导入证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导入证书"}},[a._v("#")]),a._v(" 导入证书")]),a._v(" "),t("p",[a._v("在使用 HTTPS 协议访问 Nautes API Server 之前，请先"),t("RouterLink",{attrs:{to:"/guide/user-guide/run-a-pipeline.html#导入证书"}},[a._v("导入证书")]),a._v("。")],1),a._v(" "),t("h2",{attrs:{id:"注册物理集群-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注册物理集群-api"}},[a._v("#")]),a._v(" 注册物理集群（API）")]),a._v(" "),t("h3",{attrs:{id:"生成注册物理集群的-api-请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成注册物理集群的-api-请求"}},[a._v("#")]),a._v(" 生成注册物理集群的 API 请求")]),a._v(" "),t("p",[a._v("通过接口定义 "),t("code",[a._v("Cluster_SaveCluster")]),a._v(" 生成 API 请求示例，并添加 access token 作为请求头。")]),a._v(" "),t("div",{staticClass:"language-Shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 替换变量 $api-server-address 为 Nautes API Server 的访问地址")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 替换变量 $gitlab-access-token 为 GitLab access token")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 替换变量 $cluster-name 为集群名称")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 替换变量 $product-name 为产品名称，如果没有产品名称可以先设定一个，再接下来创建产品时使用这里设定的产品名称，比如：demo-quickstart")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-X")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'POST'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'HTTP://$api-server-address/api/v1/clusters/$cluster-name'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'accept: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Content-Type: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Authorization: Bearer $gitlab-access-token'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'{\n                # 集群的 API SERVER URL。使用物理集群的 server 地址替换该变量\n                "api_server": $api-server,\n                # 集群种类：目前只支持 kubernetes\n                "cluster_kind": "kubernetes",\n                # 集群类型：virtual 或 physical\n                "cluster_type": $cluster-type,\n                # 集群用途：host 或 worker\n                "usage": $usage,\n                # 运行时类型：pipeline（流水线运行时）或者 deployment（部署运行时）\n                "worker_type": $worker-type,\n                # 主域名，使用物理集群的 IP 替换变量 $cluster-ip\n                "primary_domain": "$cluster-ip.nip.io",\n                # tekton 域名：当 worker_type 是 pipeline 时才需要填写该属性，使用物理集群的 IP 替换变量 $cluster-ip\n                "tekton_host": "tekton.$cluster-name.$cluster-ip.nip.io",\n                # argocd 域名：使用物理集群的 IP 替换变量 $cluster-ip\n                "argocd_host": "argocd.$cluster-name.$cluster-ip.nip.io",\n                # traefik 配置\n                "traefik": {\n                  "http_node_port": "30080",\n                  "https_node_port": "30443"\n                },\n                # 可选，集群内的组件也可选，如果需要使用组件的保留命名空间，使用产品名称替换：$product-name\n                "reserved_namespaces_allowed_products": {\n                  "tekton": [\n                    "$product-name"\n                  ],\n                  "argo-events": [\n                    "$product-name"\n                  ],\n                  "argo-rollouts": [\n                    "$product-name"\n                  ],\n                  "argocd": [\n                    "$product-name"\n                  ],\n                  "traefik": [\n                    "$product-name"\n                  ],\n                  "external-secrets": [\n                    "$product-name"\n                  ],\n                  "vault": [\n                    "$product-name"\n                  ],\n                  "cert-manager": [\n                    "$product-name"\n                  ],\n                  "hnc": [\n                    "$product-name"\n                  ],\n                  "oauth2-proxy": [\n                    "$product-name"\n                  ]\n                },\n                # 可选，集群内的组件也可选，如果需要使用集群级别的权限，使用产品名称替换：$product-name\n                "product_allowed_cluster_resources": {\n                  "$product-name": [\n                    {\n                      "kind": "ClusterRole",\n                      "group": "authorization.k8s.io"\n                    },\n                    {\n                      "kind": "ClusterRoleBinding",\n                      "group": "authorization.k8s.io"\n                    }\n                  ]\n                },\n                # 集群的 kubeconfig 文件内容：使用物理集群的 kubeconfig 替换该变量，并且需要对 kubeconfig 以 Base64 方式编码。\n                "kubeconfig": $kubeconfig\n            }\'')]),a._v("\n")])])]),t("p",[a._v("替换变量后流水线运行时集群的请求示例如下：")]),a._v(" "),t("div",{staticClass:"language-Shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-X")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'POST'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'HTTP://xxx.xxx.xxx.xxx:xxxxx/api/v1/clusters/physical-worker-pipeline'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'accept: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Content-Type: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Authorization: Bearer xxxxxxxxxxxxxxxxxxxxxxxxxx'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'{\n                "api_server": "https://8.217.50.114:6443",\n                "cluster_kind": "kubernetes",\n                "cluster_type": "physical",\n                "usage": "worker",\n                "worker_type": "pipeline",\n                "primary_domain": "8.217.50.114.nip.io",\n                "tekton_host": "tekton.physical-worker-pipeline.8.217.50.114.nip.io",\n                "argocd_host": "argocd.physical-worker-pipeline.8.217.50.114.nip.io",\n                "traefik": {\n                  "http_node_port": "30080",\n                  "https_node_port": "30443"\n                },\n                "reserved_namespaces_allowed_products": {\n                  "tekton": [\n                    "demo-quickstart"\n                  ],\n                  "argo-events": [\n                    "demo-quickstart"\n                  ],\n                  "argocd": [\n                    "demo-quickstart"\n                  ],\n                  "traefik": [\n                    "demo-quickstart"\n                  ],\n                  "external-secrets": [\n                    "demo-quickstart"\n                  ],\n                  "vault": [\n                    "demo-quickstart"\n                  ],\n                  "cert-manager": [\n                    "demo-quickstart"\n                  ],\n                  "hnc": [\n                    "demo-quickstart"\n                  ],\n                  "oauth2-proxy": [\n                    "demo-quickstart"\n                  ]\n                },\n                "product_allowed_cluster_resources": {\n                  "demo-quickstart": [\n                    {\n                      "kind": "ClusterRole",\n                      "group": "authorization.k8s.io"\n                    },\n                    {\n                      "kind": "ClusterRoleBinding",\n                      "group": "authorization.k8s.io"\n                    }\n                  ]\n                },\n                "kubeconfig": "YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2FrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVeVQwUlplRTVFUVRCT2VsRjNTR2hqVGsxcVRYZE9ha0V6VFZSSmVVMVVSVEJYYUdOT1RYcE5kMDVxUVRCTlZFbDVUVlJGTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXlUMFJaZUU1RVFUQk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZSZG5Sa1JUZFNWVzFCU0hZeE9IZEVXREYyTDJwdWNXRkZVM05tY2pkdVVtNXdiVFZpWWpaME5tRUtSRFptWkhnME5uVlJZaXREWVdGalZYSlVNVlZ5Y1RWT1NUSk5USGhIU0M4eVMweEJMMlkwVDJWNFdqUnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVzEzTDFGSFNYYzFOMlZ0UWpobmFEaHdRVnBHQ21kclZHMXNRekIzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRkozUVhkU1FVbG5VMEZDWkRkTWRFVnhZblkzUTBwcVEyVkhhMWxqTDFacVVraDNObk5UU2tVS01ISkZWM1p5VkZGb1NGbERTVUpvWlhwUE9YUlRWVnB4VjNkbFZHazFTRlpUVUVoWU5uUm1SMkUwU2twa1RsTnVOMDFtYTBSTVpuTUtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly8xMC4yMDQuMTE4LjIzOjY0NDMKICBuYW1lOiBkZWZhdWx0CmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiBkZWZhdWx0CiAgICB1c2VyOiBkZWZhdWx0CiAgbmFtZTogZGVmYXVsdApjdXJyZW50LWNvbnRleHQ6IGRlZmF1bHQKa2luZDogQ29uZmlnCnByZWZlcmVuY2VzOiB7fQp1c2VyczoKLSBuYW1lOiBkZWZhdWx0CiAgdXNlcjoKICAgIGNsaWVudC1jZXJ0aWZpY2F0ZS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKclJFTkRRVlJsWjBGM1NVSkJaMGxKVDBNdlRVWm9kekZWU1hkM1EyZFpTVXR2V2tsNmFqQkZRWGRKZDBsNlJXaE5RamhIUVRGVlJVRjNkMWtLWVhwT2VreFhUbk5oVjFaMVpFTXhhbGxWUVhoT2FtY3lUVlJSZDA1RVl6Qk5RalJZUkZSSmVrMUVXWGRPZWtWNVRXcEZlRTVHYjFoRVZFa3dUVVJaZHdwT2FrVjVUV3BGZUU1R2IzZE5SRVZZVFVKVlIwRXhWVVZEYUUxUFl6TnNlbVJIVm5SUGJURm9Zek5TYkdOdVRYaEdWRUZVUW1kT1ZrSkJUVlJFU0U0MUNtTXpVbXhpVkhCb1drY3hjR0pxUWxwTlFrMUhRbmx4UjFOTk5EbEJaMFZIUTBOeFIxTk5ORGxCZDBWSVFUQkpRVUpEZG1GbGFrOVljMDlOVld0c2Qxb0tVMjVuTDFkWFR5OXpURTVYUkc5ck16RjNaM0E0ZGl0VlZXWjZiMjVTUkd0R1J6UkpLM1JZTlhwd1lVRjZUWGxzWm5kbVdXYzJhVVoxUm1remFXUmtLd3BRUmxwb2QwZDFhbE5FUWtkTlFUUkhRVEZWWkVSM1JVSXZkMUZGUVhkSlJtOUVRVlJDWjA1V1NGTlZSVVJFUVV0Q1oyZHlRbWRGUmtKUlkwUkJha0ZtQ2tKblRsWklVMDFGUjBSQlYyZENVU3RwY1haUVlWUXhSVzVxWlZBMFNsaHFXa3hTWVdkMU5uUnpWRUZMUW1kbmNXaHJhazlRVVZGRVFXZE9TRUZFUWtVS1FXbENNVkZ0UTJOeVJIWkdTVXhWTVVsM0swMWxhVVJrWkVSTVFraG9RVmRoT1VKMVQzTkNSRlpMVTBGNVowbG5TRWd5T1ZGNVVEZzFhRVpRVWtkNmRRcFFaRU5qZGpkVk4wMU5MMmxwT0c1emJHUXJUeTh5U1c4eVluYzlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEtMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRGa3llSEFLV2xjMU1FeFhUbWhSUkVVeVQwUlplRTVFUVRCT2VsRjNTR2hqVGsxcVRYZE9ha0V6VFZSSmVVMVVSVEJYYUdOT1RYcE5kMDVxUVRCTlZFbDVUVlJGTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJaTW5od1dsYzFNRXhYVG1oUlJFVXlUMFJaZUU1RVFUQk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZSZVhNM2MzSlpXRUZGY3pCUGEybHFXa3QwUjFoRVprMUhXbGh6TUdKeVNHeDRUMWR3UkdaMGQyY0tLMnhGTUdSYU5GSjRVMWhZVldoQ05FbzBaakIwWlVoWFJrNU5WbVUzYzFwak4ya3lOVEF3YldWb1VVVnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVkJ2Y1hKNk1tczVVa28wTTJvclExWTBNbE13Q2xkdlRIVnlZa1YzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG9RVXhqUWxsbFJHRkVNVGMwWVZwYVVVMUNRbTUzTkhBdk5tWTVTMWhWYjJZS00ydHBSRkZYTlVOTFRXZ3pRV2xDZFdGUFIyNTJZbWwyYWpSRGVISlBja2d4V0VaU1VTOVZSMnRYWW10R1dFVXdlRXhXYzFWSlptcHJRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBjbGllbnQta2V5LWRhdGE6IExTMHRMUzFDUlVkSlRpQkZReUJRVWtsV1FWUkZJRXRGV1MwdExTMHRDazFJWTBOQlVVVkZTVVo2VERZMlREWk1XR2t2TTNJelVFZEZZVFJNVW14bFVYb3liR1V3VTBSNGNGZFBWMWRNUnpaSWFtaHZRVzlIUTBOeFIxTk5ORGtLUVhkRlNHOVZVVVJSWjBGRlN6bHdOazAxWlhjMGVGTlRXRUpzUzJWRU9WcFpOeXQzY3pGWlQybFVabGhEUTI1NUx6VlNVaTlQYVdSRlQxRlZZbWRxTmdveFptNVBiRzlFVFhwTFZpOUNPV2xFY1VsWE5GZE1aVW94TXpRNFZtMUlRV0YzUFQwS0xTMHRMUzFGVGtRZ1JVTWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbz0="\n            }\'')]),a._v("\n")])])]),t("p",[a._v("替换变量后部署运行时集群的请求示例如下：")]),a._v(" "),t("div",{staticClass:"language-Shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-X")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'POST'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'HTTP://xxx.xxx.xxx.xxx:xxxxx/api/v1/clusters/physical-worker-deployment'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'accept: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Content-Type: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Authorization: Bearer xxxxxxxxxxxxxxxxxxxxxxxxxx'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'{\n                "api_server": "https://8.217.50.114:6443",\n                "cluster_kind": "kubernetes",\n                "cluster_type": "physical",\n                "usage": "worker",\n                "worker_type": "deployment",\n                "primary_domain": "8.217.50.114.nip.io",\n                "argocd_host": "argocd.physical-worker-deployment.8.217.50.114.nip.io",\n                "traefik": {\n                  "http_node_port": "30080",\n                  "https_node_port": "30443"\n                },\n                "reserved_namespaces_allowed_products": {\n                  "argo-rollouts": [\n                    "demo-quickstart"\n                  ],\n                  "argocd": [\n                    "demo-quickstart"\n                  ],\n                  "traefik": [\n                    "demo-quickstart"\n                  ],\n                  "external-secrets": [\n                    "demo-quickstart"\n                  ],\n                  "vault": [\n                    "demo-quickstart"\n                  ],\n                  "cert-manager": [\n                    "demo-quickstart"\n                  ],\n                  "hnc": [\n                    "demo-quickstart"\n                  ]\n                },\n                "product_allowed_cluster_resources": {\n                  "demo-quickstart": [\n                    {\n                      "kind": "ClusterRole",\n                      "group": "authorization.k8s.io"\n                    },\n                    {\n                      "kind": "ClusterRoleBinding",\n                      "group": "authorization.k8s.io"\n                    }\n                  ]\n                },\n                "kubeconfig": "YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2FrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVeVQwUlplRTVFUVRCT2VsRjNTR2hqVGsxcVRYZE9ha0V6VFZSSmVVMVVSVEJYYUdOT1RYcE5kMDVxUVRCTlZFbDVUVlJGTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXlUMFJaZUU1RVFUQk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZSZG5Sa1JUZFNWVzFCU0hZeE9IZEVXREYyTDJwdWNXRkZVM05tY2pkdVVtNXdiVFZpWWpaME5tRUtSRFptWkhnME5uVlJZaXREWVdGalZYSlVNVlZ5Y1RWT1NUSk5USGhIU0M4eVMweEJMMlkwVDJWNFdqUnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVzEzTDFGSFNYYzFOMlZ0UWpobmFEaHdRVnBHQ21kclZHMXNRekIzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRkozUVhkU1FVbG5VMEZDWkRkTWRFVnhZblkzUTBwcVEyVkhhMWxqTDFacVVraDNObk5UU2tVS01ISkZWM1p5VkZGb1NGbERTVUpvWlhwUE9YUlRWVnB4VjNkbFZHazFTRlpUVUVoWU5uUm1SMkUwU2twa1RsTnVOMDFtYTBSTVpuTUtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly8xMC4yMDQuMTE4LjIzOjY0NDMKICBuYW1lOiBkZWZhdWx0CmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiBkZWZhdWx0CiAgICB1c2VyOiBkZWZhdWx0CiAgbmFtZTogZGVmYXVsdApjdXJyZW50LWNvbnRleHQ6IGRlZmF1bHQKa2luZDogQ29uZmlnCnByZWZlcmVuY2VzOiB7fQp1c2VyczoKLSBuYW1lOiBkZWZhdWx0CiAgdXNlcjoKICAgIGNsaWVudC1jZXJ0aWZpY2F0ZS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKclJFTkRRVlJsWjBGM1NVSkJaMGxKVDBNdlRVWm9kekZWU1hkM1EyZFpTVXR2V2tsNmFqQkZRWGRKZDBsNlJXaE5RamhIUVRGVlJVRjNkMWtLWVhwT2VreFhUbk5oVjFaMVpFTXhhbGxWUVhoT2FtY3lUVlJSZDA1RVl6Qk5RalJZUkZSSmVrMUVXWGRPZWtWNVRXcEZlRTVHYjFoRVZFa3dUVVJaZHdwT2FrVjVUV3BGZUU1R2IzZE5SRVZZVFVKVlIwRXhWVVZEYUUxUFl6TnNlbVJIVm5SUGJURm9Zek5TYkdOdVRYaEdWRUZVUW1kT1ZrSkJUVlJFU0U0MUNtTXpVbXhpVkhCb1drY3hjR0pxUWxwTlFrMUhRbmx4UjFOTk5EbEJaMFZIUTBOeFIxTk5ORGxCZDBWSVFUQkpRVUpEZG1GbGFrOVljMDlOVld0c2Qxb0tVMjVuTDFkWFR5OXpURTVYUkc5ck16RjNaM0E0ZGl0VlZXWjZiMjVTUkd0R1J6UkpLM1JZTlhwd1lVRjZUWGxzWm5kbVdXYzJhVVoxUm1remFXUmtLd3BRUmxwb2QwZDFhbE5FUWtkTlFUUkhRVEZWWkVSM1JVSXZkMUZGUVhkSlJtOUVRVlJDWjA1V1NGTlZSVVJFUVV0Q1oyZHlRbWRGUmtKUlkwUkJha0ZtQ2tKblRsWklVMDFGUjBSQlYyZENVU3RwY1haUVlWUXhSVzVxWlZBMFNsaHFXa3hTWVdkMU5uUnpWRUZMUW1kbmNXaHJhazlRVVZGRVFXZE9TRUZFUWtVS1FXbENNVkZ0UTJOeVJIWkdTVXhWTVVsM0swMWxhVVJrWkVSTVFraG9RVmRoT1VKMVQzTkNSRlpMVTBGNVowbG5TRWd5T1ZGNVVEZzFhRVpRVWtkNmRRcFFaRU5qZGpkVk4wMU5MMmxwT0c1emJHUXJUeTh5U1c4eVluYzlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEtMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRGa3llSEFLV2xjMU1FeFhUbWhSUkVVeVQwUlplRTVFUVRCT2VsRjNTR2hqVGsxcVRYZE9ha0V6VFZSSmVVMVVSVEJYYUdOT1RYcE5kMDVxUVRCTlZFbDVUVlJGTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJaTW5od1dsYzFNRXhYVG1oUlJFVXlUMFJaZUU1RVFUQk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZSZVhNM2MzSlpXRUZGY3pCUGEybHFXa3QwUjFoRVprMUhXbGh6TUdKeVNHeDRUMWR3UkdaMGQyY0tLMnhGTUdSYU5GSjRVMWhZVldoQ05FbzBaakIwWlVoWFJrNU5WbVUzYzFwak4ya3lOVEF3YldWb1VVVnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVkJ2Y1hKNk1tczVVa28wTTJvclExWTBNbE13Q2xkdlRIVnlZa1YzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG9RVXhqUWxsbFJHRkVNVGMwWVZwYVVVMUNRbTUzTkhBdk5tWTVTMWhWYjJZS00ydHBSRkZYTlVOTFRXZ3pRV2xDZFdGUFIyNTJZbWwyYWpSRGVISlBja2d4V0VaU1VTOVZSMnRYWW10R1dFVXdlRXhXYzFWSlptcHJRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBjbGllbnQta2V5LWRhdGE6IExTMHRMUzFDUlVkSlRpQkZReUJRVWtsV1FWUkZJRXRGV1MwdExTMHRDazFJWTBOQlVVVkZTVVo2VERZMlREWk1XR2t2TTNJelVFZEZZVFJNVW14bFVYb3liR1V3VTBSNGNGZFBWMWRNUnpaSWFtaHZRVzlIUTBOeFIxTk5ORGtLUVhkRlNHOVZVVVJSWjBGRlN6bHdOazAxWlhjMGVGTlRXRUpzUzJWRU9WcFpOeXQzY3pGWlQybFVabGhEUTI1NUx6VlNVaTlQYVdSRlQxRlZZbWRxTmdveFptNVBiRzlFVFhwTFZpOUNPV2xFY1VsWE5GZE1aVW94TXpRNFZtMUlRV0YzUFQwS0xTMHRMUzFGVGtRZ1JVTWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbz0="\n            }\'')]),a._v("\n")])])]),t("h3",{attrs:{id:"执行注册物理集群的-api-请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行注册物理集群的-api-请求"}},[a._v("#")]),a._v(" 执行注册物理集群的 API 请求")]),a._v(" "),t("p",[a._v("使用 curl 命令或者其他工具执行 API 请求，以注册物理集群。")]),a._v(" "),t("p",[a._v("请求成功后，将向租户配置库写入物理集群的资源文件，并根据资源文件向租户管理集群注册物理集群作为运行时集群。注册成功后，将在物理集群中安装 ArgoCD、ArgoRollouts、Tekton、ExternalSecret、HNC、Vault-agent 等组件。")]),a._v(" "),t("blockquote",[t("p",[a._v("只有当您的账号是租户配置库的成员，并且具备 main 分支的写入权限，才可以注册运行时集群。")])]),a._v(" "),t("h2",{attrs:{id:"注册虚拟集群-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注册虚拟集群-api"}},[a._v("#")]),a._v(" 注册虚拟集群（API）")]),a._v(" "),t("p",[a._v("注册虚拟集群时需要先将物理集群注册为宿主集群，再在宿主集群上注册虚拟集群。")]),a._v(" "),t("h3",{attrs:{id:"生成注册宿主集群的-api-请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成注册宿主集群的-api-请求"}},[a._v("#")]),a._v(" 生成注册宿主集群的 API 请求")]),a._v(" "),t("p",[a._v("通过接口定义 "),t("code",[a._v("Cluster_SaveCluster")]),a._v(" 生成 API 请求示例，并添加 access token 作为请求头。")]),a._v(" "),t("div",{staticClass:"language-Shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 替换变量 $api-server-address 为 Nautes API Server 的访问地址")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 替换变量 $gitlab-access-token 为 GitLab access token")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 替换变量 $cluster-name 为集群名称")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-X")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'POST'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'HTTP://$api-server-address/api/v1/clusters/$cluster-name'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'accept: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Content-Type: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Authorization: Bearer $gitlab-access-token'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'{\n                # 集群的 API SERVER URL，使用宿主集群的 server 地址替换该变量\n                "api_server": $api-server,\n                # 集群种类：目前只支持 kubernetes\n                "cluster_kind": "kubernetes",\n                # 集群类型：virtual 或 physical\n                "cluster_type": $cluster-type,\n                # 集群用途：host 或 worker\n                "usage": $usage,\n                # 主域名，使用物理集群的 IP 替换变量 $cluster-ip\n                "primary_domain": "$cluster-ip.nip.io",\n                # traefik 配置\n                "traefik": {\n                  "http_node_port": "30080",\n                  "https_node_port": "30443"\n                },\n                # 集群的 kubeconfig 文件内容：使用宿主集群的 kubeconfig 替换该变量，并且需要对 kubeconfig 以 Base64 方式编码。\n                "kubeconfig": $kubeconfig\n            }\'')]),a._v("\n")])])]),t("p",[a._v("替换变量后的请求示例如下：")]),a._v(" "),t("div",{staticClass:"language-Shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-X")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'POST'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'HTTP://xxx.xxx.xxx.xxx:xxxxx/api/v1/clusters/cluster-host'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'accept: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Content-Type: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Authorization: Bearer xxxxxxxxxxxxxxxxxxxxxxxxxx'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'{\n                "api_server": "https://8.217.50.114:6443",\n                "cluster_kind": "kubernetes",\n                "cluster_type": "physical",\n                "usage": "host",\n                "primary_domain": "8.217.50.114.nip.io",\n                "traefik": {\n                  "http_node_port": "30080",\n                  "https_node_port": "30443"\n                },\n                "kubeconfig": "YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2FrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRHTXlWbmtLWkcxV2VVeFhUbWhSUkVVeVQwUlplRTVFUVRCT2VsRjNTR2hqVGsxcVRYZE9ha0V6VFZSSmVVMVVSVEJYYUdOT1RYcE5kMDVxUVRCTlZFbDVUVlJGTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJqTWxaNVpHMVdlVXhYVG1oUlJFVXlUMFJaZUU1RVFUQk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZSZG5Sa1JUZFNWVzFCU0hZeE9IZEVXREYyTDJwdWNXRkZVM05tY2pkdVVtNXdiVFZpWWpaME5tRUtSRFptWkhnME5uVlJZaXREWVdGalZYSlVNVlZ5Y1RWT1NUSk5USGhIU0M4eVMweEJMMlkwVDJWNFdqUnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVzEzTDFGSFNYYzFOMlZ0UWpobmFEaHdRVnBHQ21kclZHMXNRekIzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRkozUVhkU1FVbG5VMEZDWkRkTWRFVnhZblkzUTBwcVEyVkhhMWxqTDFacVVraDNObk5UU2tVS01ISkZWM1p5VkZGb1NGbERTVUpvWlhwUE9YUlRWVnB4VjNkbFZHazFTRlpUVUVoWU5uUm1SMkUwU2twa1RsTnVOMDFtYTBSTVpuTUtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly8xMC4yMDQuMTE4LjIzOjY0NDMKICBuYW1lOiBkZWZhdWx0CmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiBkZWZhdWx0CiAgICB1c2VyOiBkZWZhdWx0CiAgbmFtZTogZGVmYXVsdApjdXJyZW50LWNvbnRleHQ6IGRlZmF1bHQKa2luZDogQ29uZmlnCnByZWZlcmVuY2VzOiB7fQp1c2VyczoKLSBuYW1lOiBkZWZhdWx0CiAgdXNlcjoKICAgIGNsaWVudC1jZXJ0aWZpY2F0ZS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKclJFTkRRVlJsWjBGM1NVSkJaMGxKVDBNdlRVWm9kekZWU1hkM1EyZFpTVXR2V2tsNmFqQkZRWGRKZDBsNlJXaE5RamhIUVRGVlJVRjNkMWtLWVhwT2VreFhUbk5oVjFaMVpFTXhhbGxWUVhoT2FtY3lUVlJSZDA1RVl6Qk5RalJZUkZSSmVrMUVXWGRPZWtWNVRXcEZlRTVHYjFoRVZFa3dUVVJaZHdwT2FrVjVUV3BGZUU1R2IzZE5SRVZZVFVKVlIwRXhWVVZEYUUxUFl6TnNlbVJIVm5SUGJURm9Zek5TYkdOdVRYaEdWRUZVUW1kT1ZrSkJUVlJFU0U0MUNtTXpVbXhpVkhCb1drY3hjR0pxUWxwTlFrMUhRbmx4UjFOTk5EbEJaMFZIUTBOeFIxTk5ORGxCZDBWSVFUQkpRVUpEZG1GbGFrOVljMDlOVld0c2Qxb0tVMjVuTDFkWFR5OXpURTVYUkc5ck16RjNaM0E0ZGl0VlZXWjZiMjVTUkd0R1J6UkpLM1JZTlhwd1lVRjZUWGxzWm5kbVdXYzJhVVoxUm1remFXUmtLd3BRUmxwb2QwZDFhbE5FUWtkTlFUUkhRVEZWWkVSM1JVSXZkMUZGUVhkSlJtOUVRVlJDWjA1V1NGTlZSVVJFUVV0Q1oyZHlRbWRGUmtKUlkwUkJha0ZtQ2tKblRsWklVMDFGUjBSQlYyZENVU3RwY1haUVlWUXhSVzVxWlZBMFNsaHFXa3hTWVdkMU5uUnpWRUZMUW1kbmNXaHJhazlRVVZGRVFXZE9TRUZFUWtVS1FXbENNVkZ0UTJOeVJIWkdTVXhWTVVsM0swMWxhVVJrWkVSTVFraG9RVmRoT1VKMVQzTkNSRlpMVTBGNVowbG5TRWd5T1ZGNVVEZzFhRVpRVWtkNmRRcFFaRU5qZGpkVk4wMU5MMmxwT0c1emJHUXJUeTh5U1c4eVluYzlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEtMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VKa2VrTkRRVkl5WjBGM1NVSkJaMGxDUVVSQlMwSm5aM0ZvYTJwUFVGRlJSRUZxUVdwTlUwVjNTSGRaUkZaUlVVUkVRbWh5VFROTmRGa3llSEFLV2xjMU1FeFhUbWhSUkVVeVQwUlplRTVFUVRCT2VsRjNTR2hqVGsxcVRYZE9ha0V6VFZSSmVVMVVSVEJYYUdOT1RYcE5kMDVxUVRCTlZFbDVUVlJGTUFwWGFrRnFUVk5GZDBoM1dVUldVVkZFUkVKb2NrMHpUWFJaTW5od1dsYzFNRXhYVG1oUlJFVXlUMFJaZUU1RVFUQk9lbEYzVjFSQlZFSm5ZM0ZvYTJwUENsQlJTVUpDWjJkeGFHdHFUMUJSVFVKQ2QwNURRVUZSZVhNM2MzSlpXRUZGY3pCUGEybHFXa3QwUjFoRVprMUhXbGh6TUdKeVNHeDRUMWR3UkdaMGQyY0tLMnhGTUdSYU5GSjRVMWhZVldoQ05FbzBaakIwWlVoWFJrNU5WbVUzYzFwak4ya3lOVEF3YldWb1VVVnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSUXBDUVUxRFFYRlJkMFIzV1VSV1VqQlVRVkZJTDBKQlZYZEJkMFZDTDNwQlpFSm5UbFpJVVRSRlJtZFJWVkJ2Y1hKNk1tczVVa28wTTJvclExWTBNbE13Q2xkdlRIVnlZa1YzUTJkWlNVdHZXa2w2YWpCRlFYZEpSRk5CUVhkU1VVbG9RVXhqUWxsbFJHRkVNVGMwWVZwYVVVMUNRbTUzTkhBdk5tWTVTMWhWYjJZS00ydHBSRkZYTlVOTFRXZ3pRV2xDZFdGUFIyNTJZbWwyYWpSRGVISlBja2d4V0VaU1VTOVZSMnRYWW10R1dFVXdlRXhXYzFWSlptcHJRVDA5Q2kwdExTMHRSVTVFSUVORlVsUkpSa2xEUVZSRkxTMHRMUzBLCiAgICBjbGllbnQta2V5LWRhdGE6IExTMHRMUzFDUlVkSlRpQkZReUJRVWtsV1FWUkZJRXRGV1MwdExTMHRDazFJWTBOQlVVVkZTVVo2VERZMlREWk1XR2t2TTNJelVFZEZZVFJNVW14bFVYb3liR1V3VTBSNGNGZFBWMWRNUnpaSWFtaHZRVzlIUTBOeFIxTk5ORGtLUVhkRlNHOVZVVVJSWjBGRlN6bHdOazAxWlhjMGVGTlRXRUpzUzJWRU9WcFpOeXQzY3pGWlQybFVabGhEUTI1NUx6VlNVaTlQYVdSRlQxRlZZbWRxTmdveFptNVBiRzlFVFhwTFZpOUNPV2xFY1VsWE5GZE1aVW94TXpRNFZtMUlRV0YzUFQwS0xTMHRMUzFGVGtRZ1JVTWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbz0="\n            }\'')]),a._v("\n")])])]),t("h3",{attrs:{id:"执行注册宿主集群的-api-请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行注册宿主集群的-api-请求"}},[a._v("#")]),a._v(" 执行注册宿主集群的 API 请求")]),a._v(" "),t("p",[a._v("使用 curl 命令或者其他工具执行 API 请求，以注册宿主集群。")]),a._v(" "),t("p",[a._v("请求成功后，将向租户配置库写入宿主集群的资源文件，并根据资源文件向租户管理集群注册宿主集群。注册成功后，将在宿主集群中安装 Traefik 等组件。")]),a._v(" "),t("h3",{attrs:{id:"生成注册虚拟集群的-api-请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成注册虚拟集群的-api-请求"}},[a._v("#")]),a._v(" 生成注册虚拟集群的 API 请求")]),a._v(" "),t("p",[a._v("通过接口定义 "),t("code",[a._v("Cluster_SaveCluster")]),a._v(" 生成 API 请求示例，并添加 access token 作为请求头。")]),a._v(" "),t("div",{staticClass:"language-Shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 替换变量 $api-server-address 为 Nautes API Server 的访问地址")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 替换变量 $gitlab-access-token 为 GitLab access token")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 替换变量 $cluster-name 为集群名称")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 替换变量 $product-name 为产品名称，如果没有产品名称可以先设定一个，再接下来创建产品时使用这里设定的产品名称，比如：demo-quickstart    ")]),a._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-X")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'POST'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'HTTP://$api-server-address/api/v1/clusters/$cluster-name'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'accept: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Content-Type: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Authorization: Bearer $gitlab-access-token'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'{\n                # 集群的 API SERVER URL，使用 https://$hostcluster-ip:$api-server-port 格式替换参数，\n                # 其中 $hostcluster-ip 指宿主集群的IP，$api-server-port 指虚拟集群的 API Server 端口\n                "api_server": $api-server,\n                # 集群种类：目前只支持 kubernetes\n                "cluster_kind": "kubernetes",\n                # 集群类型：virtual 或 physical\n                "cluster_type": $cluster-type,\n                # 集群用途：host 或 worker\n                "usage": $usage,\n                # 运行时类型：pipeline（流水线运行时）或者 deployment（部署运行时）\n                "worker_type": $worker_type,\n                # 所属宿主集群：virtual 类型集群才有此属性，使用宿主集群的名称替换参数\n                "host_cluster": $host-cluster,\n                # 主域名，使用宿主集群的 IP 替换变量 $cluster-ip\n                "primary_domain": "$cluster-ip.nip.io",\n                # tekton 域名：当 worker_type 是 pipeline 时才需要填写该属性，使用物理集群的 IP 替换变量 $cluster-ip\n                "tekton_host": "tekton.$cluster-name.$cluster-ip.nip.io",\n                # argocd 域名：使用物理集群的 IP 替换变量 $cluster-ip\n                "argocd_host": "argocd.$cluster-name.$cluster-ip.nip.io",\n                # 虚拟集群配置：virtual 类型集群才有此属性\n                "vcluster": {\n                  # API SERVER 端口号\n                  "https_node_port": $api-server-port,\n                },\n                # 可选，集群内的组件也可选，如果需要使用组件的保留命名空间，使用产品名称替换：$product-name\n                "reserved_namespaces_allowed_products": {\n                  "tekton": [\n                    "$product-name"\n                  ],\n                  "argo-events": [\n                    "$product-name"\n                  ],\n                  "argo-rollouts": [\n                    "$product-name"\n                  ],\n                  "argocd": [\n                    "$product-name"\n                  ],\n                  "traefik": [\n                    "$product-name"\n                  ],\n                  "external-secrets": [\n                    "$product-name"\n                  ],\n                  "vault": [\n                    "$product-name"\n                  ],\n                  "cert-manager": [\n                    "$product-name"\n                  ],\n                  "hnc": [\n                    "$product-name"\n                  ],\n                  "oauth2-proxy": [\n                    "demo-quickstart"\n                  ]\n                },\n                # 可选，如果需要使用集群级别的权限，使用产品名称替换：$product-name\n                "product_allowed_cluster_resources": {\n                  "$product-name": [\n                    {\n                      "kind": "ClusterRole",\n                      "group": "authorization.k8s.io"\n                    },\n                    {\n                      "kind": "ClusterRoleBinding",\n                      "group": "authorization.k8s.io"\n                    }\n                  ]\n                }\n            }\'')]),a._v("\n")])])]),t("p",[a._v("替换变量后的流水线运行时集群的请求示例如下：")]),a._v(" "),t("div",{staticClass:"language-Shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-X")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'POST'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'HTTP://xxx.xxx.xxx.xxx:xxxxx/api/v1/clusters/virtual-worker-pipeline'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'accept: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Content-Type: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Authorization: Bearer xxxxxxxxxxxxxxxxxxxxxxxxxx'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'{\n                "api_server": "https://8.217.50.114:31456",\n                "cluster_kind": "kubernetes",\n                "cluster_type": "virtual",\n                "usage": "worker",\n                "worker_type": "pipeline",\n                "host_cluster": "cluster-host",\n                "primary_domain": "8.217.50.114.nip.io",\n                "teoken_host": "tekton.virtual-worker-pipeline.8.217.50.114.nip.io",\n                "argocd_host": "argocd.virtual-worker-pipeline.8.217.50.114.nip.io",\n                "vcluster": {\n                  "https_node_port": "31456"\n                },\n                "reserved_namespaces_allowed_products": {\n                  "tekton": [\n                    "demo-quickstart"\n                  ],\n                  "argo-events": [\n                    "demo-quickstart"\n                  ],\n                  "argocd": [\n                    "demo-quickstart"\n                  ],\n                  "traefik": [\n                    "demo-quickstart"\n                  ],\n                  "external-secrets": [\n                    "demo-quickstart"\n                  ],\n                  "vault": [\n                    "demo-quickstart"\n                  ],\n                  "cert-manager": [\n                    "demo-quickstart"\n                  ],\n                  "hnc": [\n                    "demo-quickstart"\n                  ]，\n                  "oauth2-proxy": [\n                    "demo-quickstart"\n                  ]\n                },\n                "product_allowed_cluster_resources": {\n                  "demo-quickstart": [\n                    {\n                      "kind": "ClusterRole",\n                      "group": "authorization.k8s.io"\n                    },\n                    {\n                      "kind": "ClusterRoleBinding",\n                      "group": "authorization.k8s.io"\n                    }\n                  ]\n                }\n            }\'')]),a._v("\n")])])]),t("p",[a._v("替换变量后的部署运行时集群的请求示例如下：")]),a._v(" "),t("div",{staticClass:"language-Shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-X")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'POST'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'HTTP://xxx.xxx.xxx.xxx:xxxxx/api/v1/clusters/virtual-worker-deployment'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'accept: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Content-Type: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Authorization: Bearer xxxxxxxxxxxxxxxxxxxxxxxxxx'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-d")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'{\n                "api_server": "https://8.217.50.114:31456",\n                "cluster_kind": "kubernetes",\n                "cluster_type": "virtual",\n                "usage": "worker",\n                "worker_type": "deployment",\n                "host_cluster": "cluster-host",\n                "primary_domain": "8.217.50.114.nip.io",\n                "argocd_host": "argocd.virtual-worker-deployment.8.217.50.114.nip.io",\n                "vcluster": {\n                  "https_node_port": "31456"\n                },\n                "reserved_namespaces_allowed_products": {\n                  "argo-rollouts": [\n                    "demo-quickstart"\n                  ],\n                  "argocd": [\n                    "demo-quickstart"\n                  ],\n                  "external-secrets": [\n                    "demo-quickstart"\n                  ],\n                  "vault": [\n                    "demo-quickstart"\n                  ],\n                  "cert-manager": [\n                    "demo-quickstart"\n                  ],\n                  "hnc": [\n                    "demo-quickstart"\n                  ]\n                },\n                "product_allowed_cluster_resources": {\n                  "demo-quickstart": [\n                    {\n                      "kind": "ClusterRole",\n                      "group": "authorization.k8s.io"\n                    },\n                    {\n                      "kind": "ClusterRoleBinding",\n                      "group": "authorization.k8s.io"\n                    }\n                  ]\n                }\n            }\'')]),a._v("\n")])])]),t("h3",{attrs:{id:"执行注册虚拟集群的-api-请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行注册虚拟集群的-api-请求"}},[a._v("#")]),a._v(" 执行注册虚拟集群的 API 请求")]),a._v(" "),t("p",[a._v("使用 curl 命令或者其他工具执行 API 请求，以注册虚拟集群。")]),a._v(" "),t("p",[a._v("请求成功后，将向租户配置库写入虚拟集群的资源文件，并根据资源文件向租户管理集群注册虚拟集群作为运行时集群。注册成功后，将在虚拟集群中安装 ArgoCD、ArgoRollouts、Tekton、ExternalSecret、HNC、Vault-agent 等组件。")]),a._v(" "),t("blockquote",[t("p",[a._v("只有当您的账号是租户配置库的成员，并且具备 main 分支的写入权限，才可以注册运行时集群。")])]),a._v(" "),t("h2",{attrs:{id:"删除物理集群-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除物理集群-api"}},[a._v("#")]),a._v(" 删除物理集群（API）")]),a._v(" "),t("blockquote",[t("p",[a._v("请确保已成功注册物理集群。")]),a._v(" "),t("p",[a._v("在删除集群之前请先删除产品配置清单。详情参考 "),t("RouterLink",{attrs:{to:"/guide/user-guide/clean-environment.html#删除运行时"}},[a._v("删除运行时(命令行)")]),a._v("，或者参考"),t("RouterLink",{attrs:{to:"/guide/user-guide/deployment-runtime.html#删除部署运行时api"}},[a._v("删除部署运行时")]),a._v("、"),t("RouterLink",{attrs:{to:"/guide/user-guide/project-pipeline-runtime.html#删除流水线运行时api"}},[a._v("删除流水线运行时")]),a._v("、"),t("RouterLink",{attrs:{to:"/guide/user-guide/environment.html#删除环境api"}},[a._v("删除环境")]),a._v("、"),t("RouterLink",{attrs:{to:"/guide/user-guide/code-repo.html#删除代码库api"}},[a._v("删除代码库")]),a._v("、"),t("RouterLink",{attrs:{to:"/guide/user-guide/project.html#删除项目api"}},[a._v("删除项目")]),a._v("、"),t("RouterLink",{attrs:{to:"/guide/user-guide/product.html#删除产品api"}},[a._v("删除产品")]),a._v("等 API 接口。")],1)]),a._v(" "),t("h3",{attrs:{id:"生成删除物理集群的-api-请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成删除物理集群的-api-请求"}},[a._v("#")]),a._v(" 生成删除物理集群的 API 请求")]),a._v(" "),t("p",[a._v("通过接口定义 "),t("code",[a._v("Cluster_DeleteCluster")]),a._v(" 生成 API 请求示例，并添加 access token 作为请求头。")]),a._v(" "),t("div",{staticClass:"language-Shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-X")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'DELETE'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'HTTP://$api-server-address/api/v1/clusters/$cluster-name'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'accept: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Authorization: Bearer $gitlab-access-token'")]),a._v("\n")])])]),t("p",[a._v("替换变量后的请求示例如下：")]),a._v(" "),t("div",{staticClass:"language-Shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-X")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'DELETE'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'HTTP://xxx.xxx.xxx.xxx:xxxxx/api/v1/clusters/physical-worker-deployment'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'accept: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Authorization: Bearer xxxxxxxxxxxxxxxxxxxx'")]),a._v("\n")])])]),t("h3",{attrs:{id:"执行删除物理集群的-api-请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行删除物理集群的-api-请求"}},[a._v("#")]),a._v(" 执行删除物理集群的 API 请求")]),a._v(" "),t("p",[a._v("使用 curl 命令或者其他工具执行 API 请求。")]),a._v(" "),t("p",[a._v("请求成功后，将删除物理集群，以及在租户配置库的集群资源文件。")]),a._v(" "),t("blockquote",[t("p",[a._v("只有当您的账号是租户配置库的成员，并且具备 main 分支的写入权限，才可以删除运行时集群。")])]),a._v(" "),t("h2",{attrs:{id:"删除虚拟集群-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除虚拟集群-api"}},[a._v("#")]),a._v(" 删除虚拟集群（API）")]),a._v(" "),t("blockquote",[t("p",[a._v("请确保已成功注册虚拟集群。")]),a._v(" "),t("p",[a._v("在删除集群之前请先删除产品配置清单。")])]),a._v(" "),t("h3",{attrs:{id:"生成删除虚拟集群的-api-请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成删除虚拟集群的-api-请求"}},[a._v("#")]),a._v(" 生成删除虚拟集群的 API 请求")]),a._v(" "),t("p",[a._v("通过接口定义 "),t("code",[a._v("Cluster_DeleteCluster")]),a._v(" 生成 API 请求示例，并添加 access token 作为请求头。API请求示例与"),t("a",{attrs:{href:"#%E5%88%A0%E9%99%A4%E7%89%A9%E7%90%86%E9%9B%86%E7%BE%A4api"}},[a._v("删除物理集群")]),a._v("类似：")]),a._v(" "),t("div",{staticClass:"language-Shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-X")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'DELETE'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'HTTP://xxx.xxx.xxx.xxx:xxxxx/api/v1/clusters/virtual-worker-pipeline'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'accept: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Authorization: Bearer xxxxxxxxxxxxxxxxxxxx'")]),a._v("\n")])])]),t("h3",{attrs:{id:"执行删除虚拟集群的-api-请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行删除虚拟集群的-api-请求"}},[a._v("#")]),a._v(" 执行删除虚拟集群的 API 请求")]),a._v(" "),t("p",[a._v("使用 curl 命令或者其他工具执行 API 请求。\n请求成功后，将删除虚拟集群，以及在租户配置库中的集群资源文件。")]),a._v(" "),t("h3",{attrs:{id:"生成删除宿主集群的-api-请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成删除宿主集群的-api-请求"}},[a._v("#")]),a._v(" 生成删除宿主集群的 API 请求")]),a._v(" "),t("p",[a._v("通过接口定义 "),t("code",[a._v("Cluster_DeleteCluster")]),a._v(" 生成 API 请求示例，并添加 access token 作为请求头。API请求示例与"),t("a",{attrs:{href:"#%E5%88%A0%E9%99%A4%E7%89%A9%E7%90%86%E9%9B%86%E7%BE%A4api"}},[a._v("删除物理集群")]),a._v("类似：")]),a._v(" "),t("div",{staticClass:"language-Shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("    "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-X")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'DELETE'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'HTTP://xxx.xxx.xxx.xxx:xxxxx/api/v1/clusters/cluster-host'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'accept: application/json'")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n        "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-H")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'Authorization: Bearer xxxxxxxxxxxxxxxxxxxx'")]),a._v("\n")])])]),t("h3",{attrs:{id:"执行删除宿主集群的-api-请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行删除宿主集群的-api-请求"}},[a._v("#")]),a._v(" 执行删除宿主集群的 API 请求")]),a._v(" "),t("p",[a._v("使用 curl 命令或者其他工具执行 API 请求。")]),a._v(" "),t("p",[a._v("请求成功后，将删除宿主集群，以及在租户配置库中的集群资源文件。")]),a._v(" "),t("blockquote",[t("p",[a._v("只有当您的账号是租户配置库的成员，并且具备 main 分支的写入权限，才可以删除运行时集群。")])])])}),[],!1,null,null,null);t.default=n.exports}}]);