(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{291:function(t,e,a){"use strict";a.r(e);var s=a(14),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"维护部署运行时"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#维护部署运行时"}},[t._v("#")]),t._v(" 维护部署运行时")]),t._v(" "),e("p",[t._v("在开始本节之前，请确保您已阅读 "),e("RouterLink",{attrs:{to:"/guide/user-guide/user-guide-00.html"}},[t._v("概述")]),t._v(" 章节，了解创建运行时环境的主流程和相关术语；并且已经创建了至少一个产品，以及产品中的一个代码库和一个环境，详情参见 "),e("RouterLink",{attrs:{to:"/guide/user-guide/user-guide-01.html"}},[t._v("维护产品")]),t._v("、"),e("RouterLink",{attrs:{to:"/guide/user-guide/user-guide-03.html"}},[t._v("维护代码库")]),t._v("、"),e("RouterLink",{attrs:{to:"/guide/user-guide/user-guide-04.html"}},[t._v("维护环境")]),t._v("。")],1),t._v(" "),e("p",[t._v("部署运行时指将IT系统成功部署到基础设施的状态和行为，确保其能够正常运行并提供所需的功能，这里的基础设施指 Kubernetes 集群。一个产品可以包含多个部署运行时，一个 Kubernetes 集群可以负载多个产品的部署运行时。")]),t._v(" "),e("p",[t._v("下面将详细介绍如何维护部署运行时以及相关规则。维护部署运行时有多种方式，包括命令行、API 接口等，下文将描述通过 API 接口的方式维护部署运行时。")]),t._v(" "),e("h2",{attrs:{id:"维护部署运行时-api-接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#维护部署运行时-api-接口"}},[t._v("#")]),t._v(" 维护部署运行时（API 接口）")]),t._v(" "),e("h3",{attrs:{id:"创建部署运行时"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建部署运行时"}},[t._v("#")]),t._v(" 创建部署运行时")]),t._v(" "),e("p",[t._v("产品、环境和代码库创建成功之后，创建部署运行时资源以自动部署产品的运行时环境。步骤如下：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("访问 "),e("RouterLink",{attrs:{to:"/guide/user-guide/quickstart-03.html"}},[t._v("Swagger UI")]),t._v("，选择右上角 select a definition 下拉框中的 api.deploymentruntime.v1.Deploymentruntime POST 接口，点击 try it out，在 product_name 参数中输入产品名称，在 deploymentruntime_name 参数中输入部署运行时的名称，点击 execute，生成 API 请求的代码示例。")],1)]),t._v(" "),e("li",[e("p",[t._v("获取请求 API 的 access token，作为 API 请求的请求头参数。详情参考 "),e("a",{attrs:{href:"https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Personal access tokens"),e("OutboundLink")],1),t._v("。具有 owner、maintainer、developer、reporter 角色的产品成员，以及 GitLab 管理员都可以创建特定产品的部署运行时。")])]),t._v(" "),e("li",[e("p",[t._v("将前置步骤获取的 access token 作为 API 请求的请求头参数，通过 curl 命令，或者 Postman、JMeter 等工具执行 API 请求以新增部署运行时。更新后的 API 请求的代码示例：")]),t._v(" "),e("div",{staticClass:"language-Shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 实操过程中根据实际情况替换 URL 地址和相关参数")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# “manifest_source.code_repo”是监听的代码库名称，“manifest_source.target_revision” 是监听的代码库版本，“manifest_source.path”是监听的代码库路径，“destination”是目标环境  ")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-X")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'POST'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HTTP://xxx.xxx.xxx.xxx:xxxxx/api/v1/products/product-demo/deploymentruntimes/dr-demo'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'accept: application/json'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type: application/json'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Authorization: Bearer xxxxxxxxxxxxxxxxxxxxxxxxxx'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{\n     "projects_ref": [\n         "project-demo"\n     ],\n     "manifest_source": {\n         "code_repo": "coderepo-demo",\n         "target_revision": "master",\n         "path": "/path/to/manifests"\n     },\n     "destination": "environment-demo"\n }\'')]),t._v("    \n")])])]),e("p",[t._v("请求成功后，将在产品对应的 default.project 代码库中生成关联产品的部署运行时资源文件，并根据部署运行时的配置找到环境关联的部署集群实施自动部署。")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nautes.resource.nautes.io/v1alpha1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DeploymentRuntime\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("namespace\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("destination")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"environment-demo"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("manifestSource")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("codeRepo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"coderepo-demo"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/path/to/manifests"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetRevision")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"master"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("product")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"product-demo"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("projectsRef")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"project-demo"')]),t._v("\n")])])])])]),t._v(" "),e("h3",{attrs:{id:"更新部署运行时"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新部署运行时"}},[t._v("#")]),t._v(" 更新部署运行时")]),t._v(" "),e("p",[t._v("部署运行时创建成功后，可以修改部署运行时。详情参考 "),e("a",{attrs:{href:"#%E5%88%9B%E5%BB%BA%E9%83%A8%E7%BD%B2%E8%BF%90%E8%A1%8C%E6%97%B6"}},[t._v("创建部署运行时")]),t._v(" 。\n请求成功后，将更新存储在产品对应的default.project 代码库中的部署运行时资源文件，并基于变更后的配置实施自动部署。如果部署运行时已经成功部署到某个部署集群，暂不支持变更 destination，迁移集群功能将在后续版本提供。")]),t._v(" "),e("h3",{attrs:{id:"删除部署运行时"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除部署运行时"}},[t._v("#")]),t._v(" 删除部署运行时")]),t._v(" "),e("p",[t._v("部署运行时是基于产品、代码库、环境等资源的基础上定义的，其他资源对部署运行时没有依赖，因此只要用户有权限即可执行删除操作。步骤如下：")]),t._v(" "),e("ol",[e("li",[t._v("访问 "),e("RouterLink",{attrs:{to:"/guide/user-guide/quickstart-03.html"}},[t._v("Swagger UI")]),t._v("，选择右上角 select a definition 下拉框中的 api.deploymentruntime.v1.Deploymentruntime；选择 DELETE 接口，点击 try it out，在 product_name 参数中输入产品名称，在 deploymentruntime_name 参数中输入部署运行时名称，点击 execute，生成 API 请求的代码示例。详情参考 "),e("a",{attrs:{href:"#%E5%88%9B%E5%BB%BA%E9%83%A8%E7%BD%B2%E8%BF%90%E8%A1%8C%E6%97%B6"}},[t._v("创建部署运行时的步骤1")]),t._v(" 。")],1),t._v(" "),e("li",[t._v("获取请求 API 的 access token，作为 API 请求的请求头参数。详情参考 "),e("a",{attrs:{href:"https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Personal access tokens"),e("OutboundLink")],1),t._v("。具有 owner、maintainer、developer、reporter 角色的产品成员，以及 GitLab 管理员才可以删除特定产品的部署运行时。")]),t._v(" "),e("li",[t._v("将前置步骤获取的 access token 作为 API 请求的请求头参数，通过 curl 命令，或者 Postman、JMeter 等工具执行 API 来删除部署运行时。请求成功后，部署运行时的资源文件将被删除、运行在部署集群的运行时环境将被销毁。")])]),t._v(" "),e("h3",{attrs:{id:"查询部署运行时"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查询部署运行时"}},[t._v("#")]),t._v(" 查询部署运行时")]),t._v(" "),e("p",[t._v("查询部署运行时有两个 API 接口，分别是查询部署运行时列表、查询部署运行时详情。"),e("br"),t._v("\n查询部署运行时列表的步骤如下：")]),t._v(" "),e("ol",[e("li",[t._v("访问 "),e("RouterLink",{attrs:{to:"/guide/user-guide/quickstart-03.html"}},[t._v("Swagger UI")]),t._v("，选择右上角 select a definition 下拉框中的 api.deploymentruntime.v1.Deploymentruntime；选择相对路径是 /api/v1/products/{products_name}/deploymentruntimes 的 GET 接口，点击 try it out，在 product_name 参数中输入产品名称，点击 execute，生成 API 请求的代码示例。详情参考 "),e("a",{attrs:{href:"#%E5%88%9B%E5%BB%BA%E9%83%A8%E7%BD%B2%E8%BF%90%E8%A1%8C%E6%97%B6"}},[t._v("创建部署运行时的步骤1")]),t._v(" 。")],1),t._v(" "),e("li",[t._v("获取请求 API 的 access token，作为 API 请求的请求头参数。详情参考 "),e("a",{attrs:{href:"https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Personal access tokens"),e("OutboundLink")],1),t._v("。具有 owner、maintainer、developer、reporter 角色的产品成员，以及 GitLab 管理员才可以查询特定产品的部署运行时。")]),t._v(" "),e("li",[t._v("将前置步骤获取的 access token 作为 API 请求的请求头参数，通过 curl 命令，或者 Postman、JMeter 等工具执行 API 以查询代码库。请求成功后，如果用户是产品成员，将返回部署运行时列表。")])]),t._v(" "),e("p",[t._v("查询部署运行时详情的步骤如下：")]),t._v(" "),e("ol",[e("li",[t._v("访问 "),e("RouterLink",{attrs:{to:"/guide/user-guide/quickstart-03.html"}},[t._v("Swagger UI")]),t._v("，选择右上角 select a definition 下拉框中的 api.deploymentruntime.v1.Deploymentruntime；选择相对路径是 /api/v1/products/{products_name}/deploymentruntimes/{deploymentruntime_name} 的 GET 接口，点击 try it out，在 product_name 参数中输入产品名称，在 deploymentruntime_name 参数中输入部署运行时名称，点击 execute，生成 API 请求的代码示例。详情参考 "),e("a",{attrs:{href:"#%E5%88%9B%E5%BB%BA%E9%83%A8%E7%BD%B2%E8%BF%90%E8%A1%8C%E6%97%B6"}},[t._v("创建部署运行时的步骤1")]),t._v(" 。")],1),t._v(" "),e("li",[t._v("其余步骤与“查询部署运行时列表”相同，不再赘述。")])]),t._v(" "),e("h2",{attrs:{id:"强制提交部署运行时-api-接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强制提交部署运行时-api-接口"}},[t._v("#")]),t._v(" 强制提交部署运行时（API 接口）")]),t._v(" "),e("p",[t._v("详情规则参见 "),e("RouterLink",{attrs:{to:"/guide/user-guide/user-guide-03.html#强制提交代码库api-接口"}},[t._v("强制提交资源文件（API 接口）")]),t._v("。")],1),t._v(" "),e("div",{staticClass:"language-Shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以下示例为创建部署运行时，设置 destination 属性值不合规，启用 insecure_skip_check 参数以强制提交部署运行时的资源文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-X")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'POST'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HTTP://xxx.xxx.xxx.xxx:xxxxx/api/v1/products/product-demo/deploymentruntimes/dr-demo?insecure_skip_check=true'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'accept: application/json'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type: application/json'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{\n  "projects_ref": [\n    "project-demo"\n  ],\n  "manifest_source": {\n    "code_repo": "coderepo-demo",\n    "target_revision": "master",\n    "path": "/path/to/manifests"\n  },\n  "destination": "environment-demo-invalid"\n}\'')]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);