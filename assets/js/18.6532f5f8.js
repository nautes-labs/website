(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{291:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"部署一个应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署一个应用"}},[t._v("#")]),t._v(" 部署一个应用")]),t._v(" "),s("p",[t._v("本文档将描述一个用户应用的部署过程。包括以下步骤："),s("br"),t._v(" "),s("a",{attrs:{href:"#%E5%AE%89%E8%A3%85"}},[t._v("安装")]),s("br"),t._v(" "),s("a",{attrs:{href:"#%E5%87%86%E5%A4%87%E6%9C%8D%E5%8A%A1%E5%99%A8"}},[t._v("准备服务器")]),s("br"),t._v(" "),s("a",{attrs:{href:"#%E6%B3%A8%E5%86%8C%E9%9B%86%E7%BE%A4"}},[t._v("注册集群")]),s("br"),t._v(" "),s("a",{attrs:{href:"#%E5%87%86%E5%A4%87%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83"}},[t._v("准备运行环境")]),s("br"),t._v(" "),s("a",{attrs:{href:"#%E9%83%A8%E7%BD%B2"}},[t._v("部署")]),s("br"),t._v(" "),s("a",{attrs:{href:"#%E6%9F%A5%E7%9C%8B%E9%83%A8%E7%BD%B2%E7%BB%93%E6%9E%9C"}},[t._v("查看部署结果")])]),t._v(" "),s("h2",{attrs:{id:"安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[t._v("#")]),t._v(" 安装")]),t._v(" "),s("p",[t._v("以阿里云为例描述在公有云部署 Nautes 的过程，详情参考 "),s("RouterLink",{attrs:{to:"/guide/user-guide/installation.html"}},[t._v("安装")]),t._v("。")],1),t._v(" "),s("h2",{attrs:{id:"准备服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备服务器"}},[t._v("#")]),t._v(" 准备服务器")]),t._v(" "),s("p",[t._v("您需要准备一台用于安装 Kubernetes 集群的服务器。如果您已经有一套 Kubernetes 集群（需要公网 IP），可以省略该步骤。")]),t._v(" "),s("p",[t._v("下文将以阿里云为例描述如何准备服务器并安装一个 K3s 集群。")]),t._v(" "),s("p",[t._v("先创建 ECS 云服务器，详情参考 "),s("a",{attrs:{href:"https://help.aliyun.com/document_detail/25422.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("云服务器 ECS"),s("OutboundLink")],1),t._v("。服务器安装成功后，在服务器上安装 K3s，命令如下：")]),t._v(" "),s("div",{staticClass:"language-Shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 根据实际情况，替换 $PUBLIC_IP 为服务器的公网 IP")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-sfL")]),t._v(" https://get.k3s.io "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("INSTALL_K3S_VERSION")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("v1.21.14+k3s1 "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("INSTALL_K3S_EXEC")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--tls-san '),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$PUBLIC_IP")]),t._v('"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" - server "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--disable")]),t._v(" servicelb "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--disable")]),t._v(" traefik "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--disable")]),t._v(" metrics-server\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("HOME")]),t._v("}")]),t._v("/.kube\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" /etc/rancher/k3s/k3s.yaml "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("HOME")]),t._v("}")]),t._v("/.kube/k3s-config\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" /etc/rancher/k3s/k3s.yaml "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("HOME")]),t._v("}")]),t._v("/.kube/config\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("KUBECONFIG")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("HOME")]),t._v("}")]),t._v("/.kube/config\n")])])]),s("h2",{attrs:{id:"注册集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注册集群"}},[t._v("#")]),t._v(" 注册集群")]),t._v(" "),s("p",[t._v("注册集群用于把已准备好的 Kubernetes 集群托管给租户管理集群，并由租户管理集群初始化集群的相关配置。初始化完成后的集群可以作为承载应用的运行时环境。")]),t._v(" "),s("p",[t._v("注册集群支持的集群形态包括物理集群和虚拟集群。")]),t._v(" "),s("p",[t._v("当您的应用的运行时环境需要更高的性能、隔离性和可靠性时，建议使用"),s("a",{attrs:{href:"#%E6%B3%A8%E5%86%8C%E7%89%A9%E7%90%86%E9%9B%86%E7%BE%A4"}},[t._v("物理集群")]),t._v("。而对于其他环境，例如开发测试环境和试用环境等，可以使用"),s("a",{attrs:{href:"#%E6%B3%A8%E5%86%8C%E8%99%9A%E6%8B%9F%E9%9B%86%E7%BE%A4"}},[t._v("虚拟集群")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"注册物理集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注册物理集群"}},[t._v("#")]),t._v(" 注册物理集群")]),t._v(" "),s("ol",[s("li",[t._v("将命令行程序的代码库克隆到本地。")])]),t._v(" "),s("div",{staticClass:"language-Shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/nautes-labs/cli.git\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("替换位于相对路径 "),s("code",[t._v("examples/demo-cluster-physical-worker.yaml")]),t._v(" 下注册物理集群的模板的变量，包括 "),s("code",[t._v("$suffix")]),t._v("、"),s("code",[t._v("$api-server")]),t._v(" 和 "),s("code",[t._v("$kubeconfig")]),t._v("。")])]),t._v(" "),s("div",{staticClass:"language-Shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看物理集群的 kubeconfig")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("HOME")]),t._v("}")]),t._v("/.kube/config\n")])])]),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 物理集群")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nautes.resource.nautes.io/v1alpha1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Cluster\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群名称")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cluster-demo-$suffix"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群的 API SERVER URL。使用物理集群的 server 地址替换该变量")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$api-server"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群种类：目前只支持 kubernetes")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterKind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubernetes"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群类型：virtual或physical")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"physical"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群用途：host或worker")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("usage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"worker"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# argocd 域名，使用物理集群的公网IP替换域名中的IP部分")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("argocdHost")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"argocd.cluster-demo-$suffix.10-204-118-216.nip.io"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# traefik 配置：物理集群才有此属性")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("traefik")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpNodePort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"30080"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpsNodePort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"30443"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群的 kubeconfig 文件内容：物理集群才有此属性。使用物理集群的 kubeconfig 替换该变量")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kubeconfig")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n    "$kubeconfig"')]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("下载 "),s("a",{attrs:{href:"https://github.com/nautes-labs/cli.git",target:"_blank",rel:"noopener noreferrer"}},[t._v("命令行工具"),s("OutboundLink")],1),t._v("，执行以下命令以注册物理集群。您可以执行 "),s("code",[t._v("nautes -h")]),t._v("、"),s("code",[t._v("nautes apply -h")]),t._v(" 等命令来查看帮助说明。")])]),t._v(" "),s("div",{staticClass:"language-Shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 nautes 命令的帮助说明")]),t._v("\nnautes "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-h")]),t._v("\nUsage:\n  nautes "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nAvailable Commands:\n  apply       Apply resources\n  completion  Generate the autocompletion script "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the specified shell\n  "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v("        Help about any "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v("\n  remove      Remove resources\nFlags:\n  -s, --api-server string   URL to API server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("required"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  -h, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--help")]),t._v("                "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" nautes\n  -t, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--token")]),t._v(" string        Authentication token "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("required"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看 nautes apply 命令的帮助说明")]),t._v("\nnautes apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-h")]),t._v("\nApply resources\nUsage:\n  nautes apply "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\nFlags:\n  -f, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--file")]),t._v(" string   Path to the input "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("required"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\n")])])]),s("div",{staticClass:"language-Shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注册物理集群")]),t._v("\nnautes apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" examples/demo-cluster-physical-worker.yaml "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$gitlab")]),t._v("-access-token "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$api")]),t._v("-server-address\n")])])]),s("blockquote",[s("p",[t._v("GitLab 安装完成后，您需要先注册账号，再创建 "),s("a",{attrs:{href:"https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("personal access token"),s("OutboundLink")],1),t._v(" ，其中 access token 的权限范围包括：api、read_api、read_repository 和 write_repository。由于注册集群的账号必须拥有"),s("RouterLink",{attrs:{to:"/guide/user-guide/installation.html#查看安装结果"}},[t._v("租户配置库")]),t._v("的写入权限，同时 main 分支默认是保护分支，因此建议您将账号设置为租户配置库的 Maintainer 角色。"),s("br"),t._v("\nAPI Server 支持 http 和 https 协议。如果您想使用 https 协议的 API Server，请从"),s("RouterLink",{attrs:{to:"/guide/user-guide/installation.html#查看部署结果"}},[t._v("安装结果")]),t._v("下载 pki.crt 证书，并将 pki.crt 导入到执行 API 的服务器。以 Windows 操作系统的本地 PC 机为例，导入证书到“受信任的根证书颁发机构”证书目录后，本地 PC 机才能使用 https 协议的 API Server。【补充不同操作系统下导入证书的操作链接】"),s("br"),t._v("\n命令执行成功后，您可以将该物理集群作为运行集群使用。")],1)]),t._v(" "),s("h3",{attrs:{id:"注册虚拟集群"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注册虚拟集群"}},[t._v("#")]),t._v(" 注册虚拟集群")]),t._v(" "),s("ol",[s("li",[t._v("将命令行程序的代码库克隆到本地。")])]),t._v(" "),s("div",{staticClass:"language-Shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/nautes-labs/cli.git\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("替换位于相对路径 "),s("code",[t._v("examples/demo-cluster-host.yaml")]),t._v(" 下的注册宿主集群的模板的变量，包括 "),s("code",[t._v("$suffix")]),t._v("、"),s("code",[t._v("$api-server")]),t._v(" 和 "),s("code",[t._v("$kubeconfig")]),t._v("。")])]),t._v(" "),s("div",{staticClass:"language-Shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看物理集群的 kubeconfig")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("HOME")]),t._v("}")]),t._v("/.kube/config\n")])])]),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 宿主集群")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nautes.resource.nautes.io/v1alpha1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Cluster\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群名称")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cluster-demo-$suffix"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群的 API SERVER URL。使用物理集群的 server 地址替换该变量")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$api-server"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群种类：目前只支持 kubernetes")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterKind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubernetes"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群类型：virtual或physical")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"physical"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群用途：host或worker")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("usage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"host"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# traefik 配置：物理集群才有此属性")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("traefik")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpNodePort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"30080"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpsNodePort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"30443"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群的 kubeconfig 文件内容：物理集群才有此属性。使用物理集群的 kubeconfig 替换该变量")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kubeconfig")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n    "$kubeconfig"')]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("下载 "),s("a",{attrs:{href:"https://github.com/nautes-labs/cli.git",target:"_blank",rel:"noopener noreferrer"}},[t._v("命令行工具"),s("OutboundLink")],1),t._v("，执行以下命令，将配置物理集群作为虚拟集群的宿主集群。您可以执行 "),s("code",[t._v("nautes -h")]),t._v("、"),s("code",[t._v("nautes apply -h")]),t._v(" 等命令来查看帮助说明。")])]),t._v(" "),s("div",{staticClass:"language-Shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注册宿主集群")]),t._v("\nnautes apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" examples/demo-cluster-host.yaml "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$gitlab")]),t._v("-access-token "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$api")]),t._v("-server-address\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("替换位于相对路径 "),s("code",[t._v("examples/demo-cluster-virtual-worker.yaml")]),t._v(" 下的注册虚拟集群的模板的变量，包括 "),s("code",[t._v("$suffix")]),t._v("、"),s("code",[t._v("$api-server")]),t._v("、"),s("code",[t._v("$host-cluster")]),t._v(" 和 "),s("code",[t._v("$api-server-port")]),t._v("。")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 虚拟集群")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nautes.resource.nautes.io/v1alpha1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Cluster\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群名称")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cluster-demo-$suffix"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群的 API SERVER URL，使用 https://$HostCluster-Public-IP:$httpsNodePort 格式替换参数，其中 $HostCluster-Public-IP 指宿主集群的公网IP，$httpsNodePort 指虚拟集群的 Server 端口")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$api-server"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群种类：目前只支持 kubernetes")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterKind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubernetes"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群类型：virtual或physical")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("clusterType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"virtual"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集群用途：host或worker")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("usage")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"worker"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 所属宿主集群：virtual类型集群才有此属性，使用宿主集群的名称替换参数")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hostCluster")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$host-cluster"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# argocd 域名，使用宿主集群的公网IP替换域名中的IP部分")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("argocdHost")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"argocd.cluster-demo-$suffix.10-204-118-216.nip.io"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 虚拟集群配置：virtual类型集群才有此属性")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("vcluster")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# API SERVER 端口号，从端口段选择端口（30000-32767）")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpsNodePort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$api-server-port"')]),t._v("\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[t._v("执行以下命令，将在宿主集群上安装虚拟集群，并注册该虚拟集群。")])]),t._v(" "),s("div",{staticClass:"language-Shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注册虚拟集群")]),t._v("\nnautes apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" examples/demo-cluster-virtual-worker.yaml "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$gitlab")]),t._v("-access-token "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$api")]),t._v("-server-address\n")])])]),s("blockquote",[s("p",[t._v("GitLab 账号、API Server 的注意事项，与 "),s("a",{attrs:{href:"#%E6%B3%A8%E5%86%8C%E7%89%A9%E7%90%86%E9%9B%86%E7%BE%A4"}},[t._v("注册物理集群")]),t._v(" 的注意事项相同。"),s("br"),t._v("\n命令执行成功后，您可以将该虚拟集群作为运行集群使用。")])]),t._v(" "),s("h2",{attrs:{id:"准备运行环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备运行环境"}},[t._v("#")]),t._v(" 准备运行环境")]),t._v(" "),s("p",[t._v("在微服务架构中，一个IT系统由多个微服务组成，每个微服务有独立的代码库。在 Nautes 中，将 IT 系统称为“产品”，将单个微服务称为“项目”。一个产品可以包含多个项目，每个项目都拥有独立的代码库。同时，通过定义 Kubernetes 资源并利用 Operator 监听这些资源，将它们同步至 Kubernetes 集群，从而为 IT 系统的运行环境做好准备。")]),t._v(" "),s("p",[t._v("为了配置运行环境，您需要提交以下资源文件：产品、项目、代码库、环境以及运行时等资源文件。")]),t._v(" "),s("p",[t._v("下文将描述通过命令行提交运行环境相关的 Kubernetes 资源。")]),t._v(" "),s("ol",[s("li",[t._v("将命令行程序的代码库克隆到本地。")])]),t._v(" "),s("div",{staticClass:"language-Shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/nautes-labs/cli.git\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("替换位于相对路径 "),s("code",[t._v("examples/demo-product.yaml")]),t._v(" 下配置运行环境模板的变量，包括 "),s("code",[t._v("$suffix")]),t._v("，"),s("code",[t._v("$runtime-cluster")]),t._v("。")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 产品")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nautes.resource.nautes.io/v1alpha1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Product\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gitlab")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 产品名称")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 产品路径")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("visibility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" private\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("parentID")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 环境，基于用途可以分为多种类型（比如开发测试环境），需要关联集群")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nautes.resource.nautes.io/v1alpha1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Environment\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 环镜名称")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 环境的所属产品")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("product")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 环境关联的运行集群")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cluster")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $runtime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("cluster\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 环境类型")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("envType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 项目")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nautes.resource.nautes.io/v1alpha1"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Project\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 项目名称")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" project"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 项目的所属产品")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("product")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("language")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" golang\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代码库，用于存储产品的部署配置清单")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nautes.resource.nautes.io/v1alpha1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CodeRepo\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代码库名称")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" coderepo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("codeRepoProvider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gitlab\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploymentRuntime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pipelineRuntime")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代码库的所属产品")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("product")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代码库的所属项目")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("project")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" project"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("webhook")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("events")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"push_events"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("isolation")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" shared\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("git")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("gitlab")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代码库的名称")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" coderepo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代码库的路径")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" coderepo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix \n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代码库的可见性，例如：private、public")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("visibility")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" private\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" coderepo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署运行时，用于从运行集群中划出一块“空间”以承载产品的部署运行环境")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nautes.resource.nautes.io/v1alpha1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DeploymentRuntime\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署运行时的名称")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 承载产品的部署运行环境的目标集群")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("destination")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("manifestsource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署运行时监听的代码库")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("codeRepo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" coderepo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署运行时监听的代码库的相对路径")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deployments\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署运行时监听的代码库版本或代码库分支")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("targetRevision")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" main\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署运行时的所属产品")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("product")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 部署运行时关联的项目")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("projectsRef")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" project"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("$suffix\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("下载 "),s("a",{attrs:{href:"https://github.com/nautes-labs/cli.git",target:"_blank",rel:"noopener noreferrer"}},[t._v("命令行工具"),s("OutboundLink")],1),t._v("，执行以下命令，将向 GitLab 代码库提交 Kubernetes 资源文件 。您可以执行 "),s("code",[t._v("nautes -h")]),t._v("、"),s("code",[t._v("nautes apply -h")]),t._v(" 等命令来查看帮助说明。")])]),t._v(" "),s("div",{staticClass:"language-Shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("nautes apply "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" examples/demo-product.yaml "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$gitlab")]),t._v("-access-token "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-s")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$api")]),t._v("-server-address\n")])])]),s("blockquote",[s("p",[t._v("在 GitLab 中，一个产品映射一个 group ，每个 group 有一个名称为 default.project 的默认代码库，用于存储产品相关的资源文件。"),s("br"),t._v("\n执行命令行的 GitLab 账号需要拥有 default.project 代码库的写入权限，由于 main 分支默认是保护分支，因此建议您将账号设置为 group 成员的 Maintainer 角色。"),s("br"),t._v("\n命令执行成功后，将在 GitLab 中创建和产品有映射关系的 group 及其代码库，并在运行集群上部署产品的运行环境。")])]),t._v(" "),s("h2",{attrs:{id:"部署"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[t._v("#")]),t._v(" 部署")]),t._v(" "),s("p",[t._v("部署产品的资源清单，也称为“部署配置清单”，包括诸如 deployment、service 等资源。")]),t._v(" "),s("p",[t._v("下文将描述使用 Git CLI 将部署配置清单提交至产品的代码库，然后由产品的部署运行环境监听部署配置清单以实现应用部署。")]),t._v(" "),s("ol",[s("li",[t._v("克隆部署示例的代码库到本地。")])]),t._v(" "),s("div",{staticClass:"language-Shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/lanbingcloud/demo-user-deployments.git\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("修改本地代码库中 Ingress 资源的域名。")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 本示例代码库中 Ingress 资源的相对路径是：/deployment/test/devops-sample-svc.yaml")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" networking.k8s.io/v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Ingress\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sample"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dev\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("rules")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将 host 域名的 IP 替换为运行集群的公网 IP，替换变量 $Cluster_Public_IP")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" devops"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("sample.$Cluster_Public_IP.nip.io\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("http")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[t._v("修改本地 Git 客户端配置，将产品的 GitLab 代码库设置为远程仓库。")])]),t._v(" "),s("div",{staticClass:"language-Shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置存储部署配置清单的代码库作为本地 Git 客户端的远程仓库，替换变量 $Deployment_Manifest_Repo ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote set-url origin "),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$Deployment_Manifest_Repo")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("推送部署配置清单的 GitLab 账号需要拥有存储部署配置清单代码库的写入权限，由于 main 分支默认是保护分支，因此建议您将账号设置为该代码库成员的 Maintainer 角色。")])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("推送部署配置清单至产品的代码库，将向产品的部署运行时环境部署应用。")])]),t._v(" "),s("blockquote",[s("p",[t._v("部署成功后，使用浏览器访问 "),s("code",[t._v("http://devops-sample.$Cluster_Public_IP.nip.io")]),t._v(" ，可以访问示例应用的 Web 界面。")])]),t._v(" "),s("h2",{attrs:{id:"查看部署结果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看部署结果"}},[t._v("#")]),t._v(" 查看部署结果")]),t._v(" "),s("p",[t._v("您可以通过 ArgoCD 控制台或者 kubectl 命令行来查看应用的部署结果，并且只能查看和管理被授权产品的相关资源。")]),t._v(" "),s("p",[t._v("下文将描述如何通过 ArgoCD 查看部署结果。")]),t._v(" "),s("p",[t._v("访问安装在运行集群中的 "),s("RouterLink",{attrs:{to:"/guide/user-guide/installation.html#查看部署结果"}},[t._v("ArgoCD 控制台")]),t._v("，点击 LOG IN VIA DEX 进行统一认证，如果在当前浏览器会话中未登录过 GitLab，那么需要填写您的 GitLab 账号密码进行登录。登录成功后页面会自动跳转到 ArgoCD 控制台。")],1),t._v(" "),s("p",[t._v("在 ArgoCD 控制台中将呈现被授权产品相关的 ArgoCD applications，您可以查看和管理相关资源。点击某个 ArgoCD application 卡片，将呈现该 application 的资源清单，您可以查看资源的 YAML、事件、日志等，并对资源执行同步、重启、删除等操作。点击 ArgoCD 控制台左侧菜单栏的“设置”，还可以查看被授权产品相关的 ArgoCD projects。")])])}),[],!1,null,null,null);s.default=n.exports}}]);