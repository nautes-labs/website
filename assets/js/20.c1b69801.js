(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{293:function(t,e,a){"use strict";a.r(e);var s=a(14),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"维护环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#维护环境"}},[t._v("#")]),t._v(" 维护环境")]),t._v(" "),e("p",[t._v("在开始本节之前，请确保您已阅读 "),e("RouterLink",{attrs:{to:"/guide/user-guide/main-process.html"}},[t._v("主体流程")]),t._v(" 章节，了解部署应用的主体流程 和相关术语。并且已经创建了至少一个产品、注册了至少一个部署集群，详情参见 "),e("RouterLink",{attrs:{to:"/guide/user-guide/product.html"}},[t._v("维护产品")]),t._v("。")],1),t._v(" "),e("p",[t._v("环境用于负载产品的部署运行时。一个产品可以包含多个环境，每个环境都需要关联一个 Kubernetes 集群。")]),t._v(" "),e("p",[t._v("下面将详细介绍如何维护环境以及相关规则。维护环境有多种方式，包括命令行、API 接口等，下文将描述通过 API 接口的方式维护环境。")]),t._v(" "),e("h2",{attrs:{id:"维护环境-api-接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#维护环境-api-接口"}},[t._v("#")]),t._v(" 维护环境（API 接口）")]),t._v(" "),e("h3",{attrs:{id:"创建环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建环境"}},[t._v("#")]),t._v(" 创建环境")]),t._v(" "),e("p",[t._v("产品创建成功之后，创建关联集群的环境以部署指定产品。步骤如下：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("访问 "),e("RouterLink",{attrs:{to:"/guide/user-guide/installation.html#查看安装结果"}},[t._v("Swagger UI")]),t._v("，选择右上角 select a definition 下拉框中的 api.environment.v1.Environment；选择 POST 接口，点击 try it out，在 product_name 参数中输入产品名称，在 environment_name  参数中输入环境名称，点击 execute，生成 API 请求的代码示例。")],1)]),t._v(" "),e("li",[e("p",[t._v("获取请求 API 的 access token，作为 API 请求的请求头参数。详情参考 "),e("a",{attrs:{href:"https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Personal access tokens"),e("OutboundLink")],1),t._v("。具有 owner、maintainer、developer、reporter 角色的产品成员，以及 GitLab 管理员都可以创建特定产品的环境。")])]),t._v(" "),e("li",[e("p",[t._v("将前置步骤获取的 access token 作为 API 请求的请求头参数，通过 curl 命令，或者 Postman、JMeter 等工具执行 API 请求以新增环境。更新后的 API 请求的代码示例：")]),t._v(" "),e("div",{staticClass:"language-Shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 实操过程中根据实际情况替换 URL 地址和相关参数 ")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# “cluster”是关联集群，指注册到租户管理集群的部署集群名称，“env_type”是环境类型")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-X")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'POST'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HTTP://xxx.xxx.xxx.xxx:xxxxx/api/v1/products/product-demo/environments/environment-demo'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'accept: application/json'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type: application/json'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Authorization: Bearer xxxxxxxxxxxxxxxxxxxxxxxxxx'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{\n         "cluster": "my-cluster",\n         "env_type": "development"\n     }\'')]),t._v("\n")])])]),e("p",[t._v("相同产品内的环境不能共享一个 kubernetes 集群，不同产品间的环境可以共享一个 kubernetes 集群。"),e("br"),t._v("\n请求成功后，在产品对应的 default.project 代码库中生成关联产品的环境资源文件。")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nautes.resource.nautes.io/v1alpha1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Environment\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("metadata")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" environment"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("demo\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("namespace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" my"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("namespace\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spec")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cluster")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my-cluster"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("envType")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"development"')]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("product")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"product-demo"')]),t._v("\n")])])])])]),t._v(" "),e("h3",{attrs:{id:"更新环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#更新环境"}},[t._v("#")]),t._v(" 更新环境")]),t._v(" "),e("p",[t._v("环境创建成功后，可以修改环境，但相同产品内不同环境关联的集群不能相同。详情参考 "),e("a",{attrs:{href:"#%E5%88%9B%E5%BB%BA%E7%8E%AF%E5%A2%83"}},[t._v("创建环境")]),t._v(" 。\n请求成功后，将更新存储在产品对应的 default.project 代码库中的环境资源文件。一旦环境负载了产品的部署运行时，则不能修改环境的关联集群，自动部署过程中将拦截请求。")]),t._v(" "),e("h3",{attrs:{id:"删除环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除环境"}},[t._v("#")]),t._v(" 删除环境")]),t._v(" "),e("p",[t._v("由于环境可能关联多个资源，在删除环境之前，需要先删除关联该环境的所有相关资源，例如部署运行时等。步骤如下：")]),t._v(" "),e("ol",[e("li",[t._v("访问 "),e("RouterLink",{attrs:{to:"/guide/user-guide/installation.html#查看安装结果"}},[t._v("Swagger UI")]),t._v("，选择右上角 select a definition 下拉框中的 api.environment.v1.Environment；选择 DELETE 接口，点击 try it out，在 product_name 参数中输入产品名称，在 environment_name 参数中输入环境名称，点击 execute，生成 API 请求的代码示例。详情参考 "),e("a",{attrs:{href:"#%E5%88%9B%E5%BB%BA%E7%8E%AF%E5%A2%83"}},[t._v("创建环境的步骤1")]),t._v(" 。")],1),t._v(" "),e("li",[t._v("获取请求 API 的 access token，作为 API 请求的请求头参数。详情参考 "),e("a",{attrs:{href:"https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Personal access tokens"),e("OutboundLink")],1),t._v("。具有 owner、maintainer、developer、reporter 角色的产品成员，以及 GitLab 管理员才可以删除特定产品的环境。")]),t._v(" "),e("li",[t._v("将前置步骤获取的 access token 作为 API 请求的请求头参数，通过 curl 命令，或者 Postman、JMeter 等工具执行 API 来删除环境。请求成功后，环境资源文件将被删除。")])]),t._v(" "),e("h3",{attrs:{id:"查询环境"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查询环境"}},[t._v("#")]),t._v(" 查询环境")]),t._v(" "),e("p",[t._v("查询环境有两个 API 接口，分别是查询环境列表、查询环境详情。"),e("br"),t._v("\n查询环境列表的步骤如下：")]),t._v(" "),e("ol",[e("li",[t._v("访问 "),e("RouterLink",{attrs:{to:"/guide/user-guide/installation.html#查看安装结果"}},[t._v("Swagger UI")]),t._v("，选择右上角 select a definition 下拉框中的 api.environment.v1.Environment；选择相对路径是 /api/v1/products/{products_name}/environments 的 GET 接口，点击 try it out，在 product_name 参数中输入产品名称，点击 execute，生成 API 请求的代码示例。详情参考 "),e("a",{attrs:{href:"#%E5%88%9B%E5%BB%BA%E7%8E%AF%E5%A2%83"}},[t._v("创建环境的步骤1")]),t._v("。")],1),t._v(" "),e("li",[t._v("获取请求 API 的 access token，作为 API 请求的请求头参数。详情参考 "),e("a",{attrs:{href:"https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Personal access tokens"),e("OutboundLink")],1),t._v("。具有 owner、maintainer、developer、reporter 角色的产品成员，以及 GitLab 管理员才可以查询特定产品的环境。")]),t._v(" "),e("li",[t._v("将前置步骤获取的 access token 作为 API 请求的请求头参数，通过 curl 命令，或者 Postman、JMeter 等工具执行 API 以查询代码库。请求成功后，如果用户是产品成员，将返回环境信息。")])]),t._v(" "),e("p",[t._v("查询环境详情的步骤如下：")]),t._v(" "),e("ol",[e("li",[t._v("访问 "),e("RouterLink",{attrs:{to:"/guide/user-guide/installation.html#查看安装结果"}},[t._v("Swagger UI")]),t._v("，选择右上角 select a definition 下拉框中的 api.environment.v1.Environment；选择相对路径是 /api/v1/products/{products_name}/environments/{enviroment_name} 的 GET 接口，点击 try it out，在 product_name 参数中输入产品名称，在 enviroment_name 参数中输入环境名称，点击 execute，生成 API 请求的代码示例。详情参考 "),e("a",{attrs:{href:"#%E5%88%9B%E5%BB%BA%E7%8E%AF%E5%A2%83"}},[t._v("创建环境的步骤1")]),t._v("。")],1),t._v(" "),e("li",[t._v("其余步骤与“查询环境列表”相同，不再赘述。")])]),t._v(" "),e("h2",{attrs:{id:"强制提交环境-api-接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#强制提交环境-api-接口"}},[t._v("#")]),t._v(" 强制提交环境（API 接口）")]),t._v(" "),e("p",[t._v("详情规则参见 "),e("RouterLink",{attrs:{to:"/guide/user-guide/code-repo.html#强制提交代码库api-接口"}},[t._v("强制提交资源文件（API 接口）")]),t._v("。")],1),t._v(" "),e("div",{staticClass:"language-Shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 以下示例为创建环境时，设置 cluster 的属性值不合规，启用 insecure_skip_check 参数以强制提交环境的资源文件")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-X")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'POST'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HTTP://xxx.xxx.xxx.xxx:xxxxx/api/v1/products/product-demo/environments/environment-demo?insecure_skip_check=true'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'accept: application/json'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type: application/json'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{\n  "cluster": "my-cluster-invalid",\n  "env_type": "development"\n}\'')]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);